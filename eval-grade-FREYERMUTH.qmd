---
title: "graded-lab-FREYERMUTH"
author: "Timothée Freyermuth"
format: html
---
### Specify here and load librairies
```{r}
here::i_am("eval-grades-FREYERMUTH.Rproj")
library(here)
library(vroom)
library(ggplot2)
theme_set(theme_bw())

```
## Data Load
```{r}
grades = vroom(here("data","grades.csv"))
```

```{r}
library(tidyr)
library(dplyr)
```

### Q2
Le dataset contient `r nrow(grades)` notes, on a utilisé nrow(grades).


#### Q3
```{r}
nb_student = grades |>
  distinct(id) |>
  nrow()
```

There is `r nb_student` in the dataset


### Question 4
```{r}

students = grades |>
  select(id,group) |>
  distinct()
```
```{r}
students |>
  slice_tail(n = 5) |>
  knitr::kable()
```


## Q5
```{r}
students |>
  group_by(group) |>
  ggplot(aes(x = group))+
  geom_bar()
  
```


### Q6
```{r}
grades |>
  filter(course == "Herbalism and Medicine")|>
  group_by(group) |>
  summarize(avg_grade = mean(grade,na.rm = TRUE)) |>
  ggplot(aes(x = group, y = avg_grade)) +
  geom_col()+
  ylim(0,20)
  
```

# Q7

```{r}
grades |>
  group_by(semester) |>
  ggplot(aes(x = grade)) +
  geom_bar() +
  facet_wrap(~semester)
```



## Q8


```{r}
grades |>
  group_by(id, group) |>
  summarise(num_grades = n(),.groups = "drop") |>
  summarise(min = min(num_grades), max = max(num_grades),average = mean(num_grades)) |>
  knitr::kable()

```
used .groups as suggested by the warning




### Q9


```{r}
HGset = grades |>
  filter(course == "Hunting and Gathering Skills") |>
  group_by(id,group) |>
  summarise(num_grades = n(),.groups = "drop")
  
  
```
Here is a small extract of the dataset for Question 9 
`r  HGset |> slice_tail(n = 5) |>knitr::kable()`



Q10
```{r}
HGset |>
  ggplot(aes(x = num_grades))+
  geom_bar()
```
### Q11
A good way is to plot the number of grades/student conditional to
the group. we need to change the group type as a factor
```{r}
HGset |>
  ggplot(aes(x = num_grades,fill = as.factor(group)))+
  geom_bar()

```
### Q12
```{r}
library(tidyr)
```
We will use pivot_wider since we want to have more columns, one column for each course. Before that we need to group by and compute the average grade.
```{r}
new_grades_pivoted =
  grades |>
  group_by(id,group,course) |>
  summarise(avg_grade = mean(grade),.groups = "drop") |>
  pivot_wider(names_from = course,values_from = avg_grade)
```


### Q13
